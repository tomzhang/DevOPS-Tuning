user  nginx;
worker_processes  10;
worker_rlimit_nofile 640000;

events {
    use epoll;
    worker_connections  100000;
    multi_accept on;
}

error_log /var/log/nginx/error.log;
pid /var/run/nginx.pid;


http {
    # Enumerate all the Tornado servers here
    upstream collectors {
        server 127.0.0.1:8000;
        server 127.0.0.1:8001;
        server 127.0.0.1:8002;
        server 127.0.0.1:8003;
        server 127.0.0.1:8004;
    }

    access_log /var/log/nginx/access.log;
    proxy_buffering off;
    keepalive_timeout 300;
    proxy_connect_timeout 300;
    proxy_read_timeout 120;
    proxy_send_timeout 120;
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    gzip on;
    gzip_min_length 1000;
    gzip_proxied any;
    gzip_types text/plain text/css text/xml
               application/x-javascript application/xml
               application/atom+xml text/javascript;

    # Only retry if there was a communication error, not a timeout
    # on the Tornado server (to avoid propagating "queries of death"
    # to all frontends)
    proxy_next_upstream error;
    server {
        listen 80;
        server_name localhost;

        location / {
	    proxy_buffering off;
	    proxy_pass_header Server;
            proxy_set_header Host $http_host;
            proxy_redirect off;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Scheme $scheme;
            proxy_pass http://collectors;
        }
    }
}